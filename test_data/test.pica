
use IO{InputStream}

boson ScannerOutput is
    Token{type: String, content: String, line: Int}
|  EndOfStream(Unit)
|  ScanError{message: String, line: Int}
end


quark Scanner(in: InputStream) is
     chan output: ScannerOutput
     slot currentToken: String = ""
     behavior main() is
        rec in.chars do
            on More(c) do
                currentToken := currentToken +  c
                cond
                  c == end_of_token then
                    send output (new Token{type: "t", content: currentToken, line: 27})
                    currentToken := ""
                  end
                end
            end
            on End(u) do
               send output(new Token{type: "t", content: currentToken, line: line_number})
               send output(new EndOfStream(Unit))
               exit
            end
        end
    end@behavior
    adopt main()
end@quark
